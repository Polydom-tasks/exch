[tool.poetry]
name = "exch"
version = "0.0.1"
description = "Test assessment"
authors = ["Ulanbek Dokturbek uulu <ulanbek.dt94@gmail.com>"]
readme = "README.md"

[tool.poetry.dependencies]
python = "^3.11.4"
fastapi = "*"
uvicorn = "*"
alembic = "*"
psycopg2-binary = "*"
SQLAlchemy = "*"
pydantic = "*"
pydantic-settings = "*"
asyncpg = "*"
httpx = "*"

[tool.poetry.group.qa.dependencies]
ruff = "*"
pytest = "*"
mypy = "*"
black = "*"

[tool.poetry.group.local.dependencies]
ipdb = "*"
ipython = "*"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 120
exclude = '(\.git|\.cache|\.mypy_cache|\.pytest_cache|\.tox|\.venv|\.idea|__pycache__|htmlcov|alembic)'

[tool.mypy]
strict = true
ignore_missing_imports = true
exclude = '(\.git|\.cache|\.mypy_cache|\.pytest_cache|\.tox|\.venv|\.idea|__pycache__|htmlcov|alembic)'
disallow_subclassing_any = false
disallow_untyped_decorators = false

[tool.ruff]
lint.select = ["ALL"]
line-length = 120
exclude = ["*alembic*", "*.venv*", "*main*"]
lint.ignore = [
    "D203",  # conflicth with D211
    "D212",  # conflicth with D213
    "ANN101",  # Missing type annotation for `self` in method
    "ANN102",  # Missing type annotation for `cls` in classmethod
    "C419",  #  Unnecessary list comprehension
    "TCH001",  # Move application import `` into a type-checking block
    "TCH003",  # Move standard library import `` into a type-checking block
]

[tool.coverage.run]
branch = true
omit = [
    "*/alembic/*",
]

[tool.coverage.report]
skip_empty = true
skip_covered = true
exclude_lines = [
    "raise NotImplementedError",
]
